#!/usr/bin/python
import redis, getpass, sys, cmd
from flask import g
from PyChannel import app
from PyChannel.objects import Tripcode, Config
from datetime import timedelta
import cPickle as cP

class PyChannelAdmin(cmd.Cmd):
	
	def precmd(self, line):
		self.ctx = app.test_request_context()
		self.ctx.push()
		app.preprocess_request()
		return line
		
	def postcmd(self, stop, line):
		self.ctx.pop()
		return False
	
	def do_create(self, line):
		"Create and admin user. USAGE: pychannel-admin create"
		u_name = raw_input("Enter Username >>> ")
		u_pass = getpass.getpass("Enter Password >>> ")
		u_pass2 = getpass.getpass("Enter Password again >>> ")
		if u_pass != u_pass2:
			print "Passwords do not match"
			return None
		
		trip = Tripcode(u_name, u_pass)
		trip.permission = "admin"
		trip.password = u_pass
		trip.save()
		
		print "Admin added..."
		
	def do_init(self, line):
		if g.r.exists("default:config"):
			print "Default config already exists..."
			return None
		
		defaults = {
			"commands": [],
			"allow_threads": []
		}
		
		config = Config("default")
		
		print "conf is", config
		
		delattr(config, "board")
		config.boards = ["g"]
		
		print "updated", config
		print "co", config.__dict__
		
		from cStringIO import StringIO
		f = StringIO()
		
		print "is new?", issubclass(Config, object)
		
		cP.dump(config, f, 0)
		#flush the buffer
		f.flush()
		#seek to the begining of the file
		f.seek(0, 0)
		
		print f.read()
		
		print "dumped", dumped
		
		
		g.r.set("default:config", cP.dumps(config, -1))
		
		print "Default config set..."
		
	def do_unban(self, line):
		args = line.split(" ")
		
		if g.r.exists(":".join(["ban", args[-1]])):
			g.r.delete(":".join(["ban", args[-1]]))
			print "Ban on address {0} released.".format(args[-1])
		else:
			print "No current ban on address {0}.".format(args[-1])
			
	def do_ban(self, line):
		args = line.split(" ")
		
		if g.r.exists(":".join(["ban", args[-1]])):
			print "Ban already exists on address {0}.".format(args[-1])
		else:
			g.r.set(":".join(["ban", args[-1]]), True)
			g.r.expire(":".join(["ban", args[-1]]), int(timedelta(weeks=1).total_seconds()))
			print "Ban on address {0} instated.".format(args[-1])
		
if len(sys.argv) < 2:
	PyChannelAdmin().cmdloop()
else:
	ad = PyChannelAdmin()
	ad.onecmd(" ".join(sys.argv[1:]))